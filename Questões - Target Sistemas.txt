1) Código em C e respostas:

#include <stdio.h>

int main()
{
    int ind = 13, soma = 0, i =0;
    
    do{
        i = i+1;
        soma = soma + i;
            printf( "%d\n",soma);
    }while (i < ind);
    
    return 0;
}

--> Último valor mostrado: 91
--> Sequência de valores mostrados: 1 ; 3 ; 6 ; 10 ; 15 ; 21 ; 28 ; 36 ; 45 ; 55 ; 66 ; 78 ; 91

2) Código em C - Sequência de Fibonacci com verificação:

#include <stdio.h>

int main()
{
    int n1=0, n2=1, n3=0;
    int i = 0, j;
    
    printf("\n\nDigite um numero:\n");
    scanf("%d", &i);
    
    while (i>n3){
        n3 = n1 + n2;
        n1 = n2;
        n2 = n3;
    }
    
    if(i == 0){
        printf("O numero esta na sequencia de Fibonacci! O próximo número é: 1");
    }else if(i == n3){
        printf("O numero %d esta na sequencia de Fibonacci, o proximo numero e: %d", i, n1+i);
    }else{
        printf("Este numero nao esta na sequencia de Fibonacci.");
    }
    
    return 0;
}


3) Descubra a lógica e complete o próximo elemento:  

a) 1, 3, 5, 7, ___  R: 9 

b) 2, 4, 8, 16, 32, 64, ____  R: 128

c) 0, 1, 4, 9, 16, 25, 36, ____  R: 49

d) 4, 16, 36, 64, ____  R: 100

e) 1, 1, 2, 3, 5, 8, ____  R: 13 (Fibonacci)

f) 2,10, 12, 16, 17, 18, 19, ____  R: 200 (Valores que começam com a letra "D")

4) Considerando que o carro está a 100km/h e o caminhão a 80km/h e o trajeto tem 100km de distância, sabemos que o carro demorará menos de 1h e o caminhão demorará mais de 1h (considerei que estão numa velocidade constante), esse fator já diz muito, mais uma constatação é que o caminhão perde 5min em cada pedágio, e ele terá que parar em dois, perdendo então, 10min de viagem, como o carro não para no pedágio, o mesmo não sofrerá nenhum prejuízo, dentro deste constexto.

Considerando tudo isso, e que a questão pergunta quem estará mais próximo a RIBEIRÃO PRETO quando eles SE CRUZAREM, a resposta é:
Os dois estarão na mesma distância, no momento em que o caminhão estiver "do lado do carro", eles estarão num ponto em comum, isto é, na mesma altura da estrada, estando então, os dois numa distância igual da cidade de Ribeirão :)

5) Código em Java e C:

---> Usando o método Reverse em Java (aproveitando para testar ele)
package testereverse;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        
        Scanner ent = new Scanner(System.in);
        String palavra = null;
        
        System.out.println("Digite a palavra que deseja inverter:\n");
        palavra = ent.next();
        String palavraInvertida = new StringBuilder(palavra).reverse().toString();

        System.out.println("Sua palavra: " +palavra+ "\nSua palavra invertida: " +palavraInvertida);   
    }
    
}

---> Código em C, sem nenhuma função pré-definida:

#include<stdio.h>
#include<string.h>
#include<stdlib.h>  //Biblioteca necessária para usar as funções strcpy e strlen

int main(){
       char palavra[50],aux[50];
       int i,j;
       printf("Digite a frase ou palavra a ser invertida: \n");
       gets(palavra);  
       j=strlen(palavra)-1;    //strlen calcula a quantidade de caracteres que tem a string
       for(i=0;palavra[i]!='\0';i++){        
       aux[j]=palavra[i];
       j--;     
       }
       aux[i]='\0';      //Se nao colocar essa parte, o programa pode mostrar LIXO
       strcpy(palavra,aux);    //Copia para a variável string o conteúdo da variável auxiliar
       printf("\n\nA frase inversa e: %s\n\n",palavra);
system("pause");
}


